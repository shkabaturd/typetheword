{"version":3,"sources":["hello.cljs"],"mappings":";AAMA,AAAKA,mBAAW,gDAAA,hDAACC;AAEjB,cAAA,dAAKC;AAGL,wBAAA,xBAAMC,wDAAiBC;AAAvB,AACE,IAAMC,MAAI,AAAOD;gBAAjB,mFAAA,QAAA,UAAA,QAAA,MAAA,MAAA,SAAA,OAAA,rJACOE;AADP,AAEE,GAAM,AAACC,cAAI,AAACC,4BAAgBF,UAAUD;AAAtC,AACE,AAACI,sBAAOT,iBAAW,6CAAA,AAAAU,gBAAMV,+DAAWK;;AADtC;;AAEA,oBAAM,+BAAA,AAAAK,/BAACC,mBAAaT,4BAAOF;AAA3B,AACE,OAACS,sBAAOT,iBAAW,AAACY,8CAAMC,cAAI,kBAAA,AAAAH,lBAACI,kCAASd;;AAD1C;;;AAGJ,4BAAA,5BAAMe;AAAN,AAAA,0FAAA,mDAAA,mFAAA,kDAAA,wHAAA,rCAESC,yBAAmBd,gBAAU,gBAAA,AAAAQ,hBAACO,gCAAOjB;;AAG9C,gBAAA,hBAAMkB;AAAN,AACE,iDAAA,jDAACC,oIAAWJ,kCACD,AAAQK;;AACnB,+BAAA,xBAAmBC,kCAAoBlB;;AAEzC,aAAA,bAAMmB;AAAN,AACE,uGAAA,vGAACC;;AACD,OAACL","names":["hello/typed-text","reagent.core.atom","hello/chors","hello/handle-key-down","event","key","key-names","cljs.core/not","helpers/contains-str?","cljs.core/reset!","cljs.core/deref","helpers/first-diff","cljs.core.apply","cljs.core/str","cljs.core/butlast","hello/state-ful-with-atom","helpers/add-transparency","cljs.core/count","hello/mountit","reagent.dom.render","js/document","js/window","hello/init","cljs.core.print"],"sourcesContent":["(ns hello\r\n   (:require [reagent.core :as r]\r\n             [reagent.dom :as rd]\r\n             [components :as c]\r\n             [helpers :as h]))\r\n\r\n(def typed-text (r/atom \"\"))\r\n\r\n(def chors \"\u0418\u0431\u043e \u0435\u0441\u043b\u0438 \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u043f\u0440\u043e\u0449\u0430\u0442\u044c \u043b\u044e\u0434\u044f\u043c \u0441\u043e\u0433\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438\u0445, \u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0438\u0442 \u0438 \u0432\u0430\u043c \u041e\u0442\u0435\u0446 \u0432\u0430\u0448 \u041d\u0435\u0431\u0435\u0441\u043d\u044b\u0439.\")\r\n\r\n \r\n(defn handle-key-down [event]\r\n  (let [key (.-key event)\r\n         key-names [\"Enter\" \"Control\" \"Shift\" \"Alt\" \"Tab\" \"Escape\" \"Meta\" \"Backspace\"]] \r\n    (when (not (h/contains-str? key-names key))\r\n      (reset! typed-text (str @typed-text key)))\r\n    (when (h/first-diff chors @typed-text)\r\n      (reset! typed-text (apply str (butlast @typed-text))))))\r\n\r\n(defn state-ful-with-atom []\r\n  [:div \r\n   [:h1 [h/add-transparency chors 0.3 (count @typed-text)]]\r\n   #_[:h1 {:style {:color \"red\"}} (or @typed-text \"hoho...\")]])\r\n\r\n(defn mountit []\r\n  (rd/render [state-ful-with-atom]\r\n             (.-body js/document))\r\n  (.addEventListener js/window \"keydown\" handle-key-down))\r\n\r\n(defn init []\r\n  (print \"Hello\")\r\n  (mountit)\r\n  )\r\n\r\n"]}